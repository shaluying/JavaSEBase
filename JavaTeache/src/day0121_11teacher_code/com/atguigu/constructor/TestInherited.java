package day0121_11teacher_code.com.atguigu.constructor;

/*
问题？
（1）父类的构造器会不会继承到子类中？
答案：不会
（2）父类的构造器和子类有没有关系？
A：子类在继承父类时，默认会在子类的构造器首行，加一句代码 super();
表示调用父类的无参构造。

B：那么如果父类没有无参构造，子类构造器中没有做特别处理的话，编译是要报错的。
C：那么如果父类没有无参构造，子类构造器中首行一定要明确调用父类的哪个有参构造，
同时super(实参列表)的方式确定

D：如果父类既有无参构造，又有有参构造，
那么没写super(实参列表);，就表示调用父类的无参构造，
  除非你写了super(实参列表);。
  换句话说，调用父类的无参构造super();可写可不写。

 （3）为什么子类的构造器一定要调用父类的构造器呢？
 因为子类会继承父类所有的成员变量，那么在new子类对象时，必须为这些继承成员变量“初始化”，
 而为这些成员变量初始化，最合适的就是通过父类的构造器。

 总结：
 super()：表示调用父类的无参构造，可以省略
 super(实参列表):表示调用父类的有参构造，不能省略
 如果要写它们，都必须在构造器的首行。而且不能和this()，this(实参列表)在同一个构造器中出现

 */
public class TestInherited {
    public static void main(String[] args) {
        Son s1 = new Son("尚硅谷");
        Son s2 = new Son();
    }
}
